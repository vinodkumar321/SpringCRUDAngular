/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.31 (Ubuntu)
 * Generated at: 2022-03-29 11:49:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.jocata.model.Product;
import com.jocata.model.Category;
import com.jocata.util.ServiceManager;
import java.util.List;

public final class addProduct_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.jocata.util.ServiceManager");
    _jspx_imports_classes.add("com.jocata.model.Product");
    _jspx_imports_classes.add("com.jocata.model.Category");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"ISO-8859-1\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<center>\n");
      out.write("\t\t<h2>Add new Product</h2>\n");
      out.write("\t\t<form action = \"/SpringMvcApp/saveProduct\" method=\"POST\">\n");
      out.write("\t\tProduct Name: <input type=\"text\" name=\"pName\" /><br/>\n");
      out.write("\t\tCategory Id: <input type=\"text\" name=\"catId\" /><br/>\n");
      out.write("\t\tProduct Price: <input type=\"text\" name=\"price\" /><br/>\n");
      out.write("\t\tProduct Quantity: <input type=\"text\" name=\"quantity\" /><br/>\n");
      out.write("\t\tProduct Description: <input type=\"text\" name=\"description\" /><br/><br/>\n");
      out.write("\t\t\n");
      out.write("\t\t               <input type=\"submit\" value=\"Add Product\" />\n");
      out.write("\t\t </form>\n");
      out.write("\t\t \n");
      out.write("\t\t <h3>Existing Product</h3>\n");
      out.write("\t\t ");

		 	List<Product> productList = null;
		    
		 	if(request.getAttribute("productList") != null)
		 		productList = (List<Product>)request.getAttribute("productList");
		 	
		 	if(productList != null && productList.size() > 0){
		 		for(Product product : productList){
		 	
		 
      out.write("\n");
      out.write("\t\t     <hr>\n");
      out.write("\t\t \t   <b> Product Name : </b>");
      out.print( product.getpName() );
      out.write(" <br/><br/>\n");
      out.write("\t\t \t    <b>Category Id : </b>");
      out.print( product.getCatId() );
      out.write(" <br/><br/>\n");
      out.write("\t\t \t    <b>Price : </b>");
      out.print( product.getPrice() );
      out.write(" <br/><br/>\n");
      out.write("\t\t \t    <b>Quantity : </b>");
      out.print( product.getQuantity() );
      out.write(" <br/><br/>\n");
      out.write("\t\t \t    <b>Description : </b>");
      out.print( product.getDescription() );
      out.write(" <br/><br/>\n");
      out.write("\t\t \t\n");
      out.write("\t\t ");

		 		}
		 	}
		 	else{
		 
      out.write("\n");
      out.write("\t\t \t<b>--No Products to Show--</b>\n");
      out.write("\t\t ");

		 	}
		 
      out.write("\n");
      out.write("\t\t              \n");
      out.write("\t</center>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
